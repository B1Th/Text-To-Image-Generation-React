{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\ReactJS\\\\image-generator\\\\src\\\\Generate.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Aos from 'aos';\nimport 'aos/dist/aos.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Generate = () => {\n  _s();\n  const [ImageUrl, setImageUrl] = useState('');\n  const [inputText, setInputText] = useState('');\n  const [loading, setLoading] = useState(false);\n  const generateImage = async () => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        text_prompt: inputText\n      })\n    };\n    setLoading(true);\n    const response = await fetch('http://127.0.0.1:8000/api/predict/', requestOptions);\n    const data = await response.json();\n    let imagePath = data.image.replace(/\\\\/g, '/');\n    const imageUrl = `http://127.0.0.1:8000/media/${imagePath}`;\n    setImageUrl(imageUrl);\n    setLoading(false);\n    console.log(ImageUrl);\n  };\n  useEffect(() => {\n    Aos.init({\n      duration: 2000,\n      once: true\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Image is loading \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"generate\",\n      id: \"gotogenerate\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image_container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img_box\",\n          children: ImageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: ImageUrl,\n            alt: \"Generated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prompt_container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"how_to\",\n          \"data-aos\": \"fade-down\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"How to create \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"gradient-text\",\n              children: \"AI\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 31\n            }, this), \" images\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Write prompt in the below textbar and click generate to create visually unique prompts to your ideas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"prompt_field\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => setInputText(e.target.value),\n              type: \"text\",\n              placeholder: \"Describe your image\",\n              name: \"generate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => generateImage,\n              children: \"Generate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Generate, \"Jop9PH3YBoo8MMeSzfGwn9lPnW8=\");\n_c = Generate;\nexport default Generate;\n\n// import React, { useEffect,useState } from \"react\";\n// import Aos from \"aos\";\n// import \"aos/dist/aos.css\";\n\n// const Generate = () => {\n//   const [ImageUrl, setImageUrl] = useState(\"\");\n//   const [inputText,setInputText] = useState(\"\");\n//   const generateImage = async ()=>{\n//     const requestOptions = {\n//       method:'POST',\n//       headers : {'Content-Type':'application/json'},\n//       body:JSON.stringify({text_prompt:inputText})\n//     };\n//     const response = await fetch(\"http://127.0.0.1:8000/api/predict/\",requestOptions);\n//     const data = await response.json(); \n\n//     let imagePath = data.image.replace(/\\\\/g,'/');\n\n//     const imageUrl = `http://127.0.0.1:8000/media/${imagePath}`;\n//     setImageUrl(imageUrl);\n//     console.log(ImageUrl)\n\n//   }\n\n//   useEffect(() => {\n//     Aos.init({ duration: 2000, once: true });\n//   }, []);\n//   return (\n//     <>\n//       <div className=\"generate\" id=\"gotogenerate\">\n//         <div className=\"image_container\">\n//           <div className=\"img_box\">\n//             {/* <h2>Generated Image</h2> */}\n//             {ImageUrl && <img src={ImageUrl} alt='Generated' />}\n//           </div>\n//         </div>\n//         <div className=\"prompt_container\">\n//           <div className=\"how_to\" data-aos=\"fade-down\">\n//             <h1>\n//               How to create <span className=\"gradient-text\">AI</span> images\n//             </h1>\n//             <p>\n//               Write prompt in the below textbar and click generate to create\n//               visually unique prompts to your ideas\n//             </p>\n//             <form className=\"prompt_field\">\n//               <input onChange={e=>setInputText(e.target.value)}\n//                 type=\"text\"\n//                 placeholder=\"Describe your image\"\n//                 name=\"generate\"\n//               />\n//               <button onClick={generateImage}>Generate</button>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default Generate;\nvar _c;\n$RefreshReg$(_c, \"Generate\");","map":{"version":3,"names":["React","useEffect","useState","Aos","jsxDEV","_jsxDEV","Fragment","_Fragment","Generate","_s","ImageUrl","setImageUrl","inputText","setInputText","loading","setLoading","generateImage","requestOptions","method","headers","body","JSON","stringify","text_prompt","response","fetch","data","json","imagePath","image","replace","imageUrl","console","log","init","duration","once","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","src","alt","onChange","e","target","value","type","placeholder","name","onClick","_c","$RefreshReg$"],"sources":["D:/Web/ReactJS/image-generator/src/Generate.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Aos from 'aos'\r\nimport 'aos/dist/aos.css'\r\n\r\nconst Generate = () => {\r\n  const [ImageUrl, setImageUrl] = useState('')\r\n  const [inputText, setInputText] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const generateImage = async () => {\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ text_prompt: inputText }),\r\n    }\r\n    setLoading(true)\r\n    const response = await fetch(\r\n      'http://127.0.0.1:8000/api/predict/',\r\n      requestOptions\r\n    )\r\n    const data = await response.json()\r\n\r\n    let imagePath = data.image.replace(/\\\\/g, '/')\r\n\r\n    const imageUrl = `http://127.0.0.1:8000/media/${imagePath}`\r\n    setImageUrl(imageUrl)\r\n    setLoading(false)\r\n    console.log(ImageUrl)\r\n  }\r\n\r\n  useEffect(() => {\r\n    Aos.init({ duration: 2000, once: true })\r\n  }, [])\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h1> Image is loading </h1>\r\n      ) : (\r\n        <div className=\"generate\" id=\"gotogenerate\">\r\n          <div className=\"image_container\">\r\n            <div className=\"img_box\">\r\n              {/* <h2>Generated Image</h2> */}\r\n              {ImageUrl && <img src={ImageUrl} alt=\"Generated\" />}\r\n            </div>\r\n          </div>\r\n          <div className=\"prompt_container\">\r\n            <div className=\"how_to\" data-aos=\"fade-down\">\r\n              <h1>\r\n                How to create <span className=\"gradient-text\">AI</span> images\r\n              </h1>\r\n              <p>\r\n                Write prompt in the below textbar and click generate to create\r\n                visually unique prompts to your ideas\r\n              </p>\r\n              <form className=\"prompt_field\">\r\n                <input\r\n                  onChange={(e) => setInputText(e.target.value)}\r\n                  type=\"text\"\r\n                  placeholder=\"Describe your image\"\r\n                  name=\"generate\"\r\n                />\r\n                <button onClick={() => generateImage}>Generate</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Generate\r\n\r\n\r\n// import React, { useEffect,useState } from \"react\";\r\n// import Aos from \"aos\";\r\n// import \"aos/dist/aos.css\";\r\n\r\n\r\n\r\n\r\n// const Generate = () => {\r\n//   const [ImageUrl, setImageUrl] = useState(\"\");\r\n//   const [inputText,setInputText] = useState(\"\");\r\n//   const generateImage = async ()=>{\r\n//     const requestOptions = {\r\n//       method:'POST',\r\n//       headers : {'Content-Type':'application/json'},\r\n//       body:JSON.stringify({text_prompt:inputText})\r\n//     };\r\n//     const response = await fetch(\"http://127.0.0.1:8000/api/predict/\",requestOptions);\r\n//     const data = await response.json(); \r\n\r\n//     let imagePath = data.image.replace(/\\\\/g,'/');\r\n\r\n//     const imageUrl = `http://127.0.0.1:8000/media/${imagePath}`;\r\n//     setImageUrl(imageUrl);\r\n//     console.log(ImageUrl)\r\n\r\n   \r\n//   }\r\n  \r\n//   useEffect(() => {\r\n//     Aos.init({ duration: 2000, once: true });\r\n//   }, []);\r\n//   return (\r\n//     <>\r\n//       <div className=\"generate\" id=\"gotogenerate\">\r\n//         <div className=\"image_container\">\r\n//           <div className=\"img_box\">\r\n//             {/* <h2>Generated Image</h2> */}\r\n//             {ImageUrl && <img src={ImageUrl} alt='Generated' />}\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"prompt_container\">\r\n//           <div className=\"how_to\" data-aos=\"fade-down\">\r\n//             <h1>\r\n//               How to create <span className=\"gradient-text\">AI</span> images\r\n//             </h1>\r\n//             <p>\r\n//               Write prompt in the below textbar and click generate to create\r\n//               visually unique prompts to your ideas\r\n//             </p>\r\n//             <form className=\"prompt_field\">\r\n//               <input onChange={e=>setInputText(e.target.value)}\r\n//                 type=\"text\"\r\n//                 placeholder=\"Describe your image\"\r\n//                 name=\"generate\"\r\n//               />\r\n//               <button onClick={generateImage}>Generate</button>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Generate;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}